# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '443bf970-a9b6-4164-9d76-dddd0c72ec8d'

  # Web app name
  webAppName: 'devops-demo-app'

  # Environment name
  environmentName: 'devops-demo-app'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '20.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm run build --if-present
#        npm run test --if-present
      displayName: 'npm install, build and test'

    - task: DockerCompose@1
      displayName: 'Build Docker images'
      inputs:
        azureContainerRegistry: $(azureSubscription)
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Run a Docker Compose command'
        dockerComposeCommand: 'build'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Docker Compose files'
      inputs:
        PathtoPublish: $(System.DefaultWorkingDirectory)
        ArtifactName: docker-compose-files
        publishLocation: 'Container'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DockerCompose@1
            displayName: 'Deploy using Docker Compose'
            inputs:
              azureContainerRegistry: $(azureSubscription)
              dockerComposeFile: '**/docker-compose.yml'
              action: 'Run a Docker Compose command'
              dockerComposeCommand: 'up -d'
