# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  # Pool name (where the agent is in)
  poolName: 'Default'
  # Agent VM image name
  vmImageName: 'arm-vm'

  # for pushing to registry
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'c2122642-db2e-4436-bd2f-270d4e0b930b'
  imageRepository: 'winstonlinnodejscruddemo'
  containerRegistry: 'myownregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  
  # for deployment to container app
  appName: devopsdemowebapp
  # this subscription ID is taken from the container web app page
  azureSubscription_containerApp: '0049e4f9-cdd6-4927-821c-da241d40e9d0'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: $(poolName)
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        command: build
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        tags: |
          $(tag)

- stage: Test
  displayName: 'Test Stage'
  dependsOn: Build
  isSkippable: false
  jobs:
  - job: TestJob
    displayName: 'Test Job'
    pool:
      name: $(poolName)
      vmImage: $(vmImageName)
    steps:
    - script: |
        echo "Running unit tests..."
        docker compose run app npm run test
        docker stop $(docker ps -a -q)
      displayName: 'Run unit tests'

- stage: Publish
  displayName: Publish the container
  jobs:
  - job: Push
    displayName: Push container
    pool:
      name: $(poolName)
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: push the image to container registry
      inputs:
          command: push
          containerRegistry: $(dockerRegistryServiceConnection)
          repository: $(imageRepository)
          dockerfile: $(dockerfilePath) 
          tags: |
            $(tag)

- stage: Deploy
  displayName: Deploy the container to an Azure container app
  pool:
    name: $(poolName)
    vmImage: $(vmImageName)
  jobs:
  - job: DeployJob
    steps:
    ## deploy to azure container web app that i created earlier 
    - task: AzureWebAppContainer@1
      displayName: 'Azure Web App on Container Deploy'
      inputs:
        azureSubscription: $(azureSubscription_containerApp)
        appName: $(appName)
        containers: $(containerRegistry)/$(imageRepository):$(tag)